version: '2'

services:

  # Elasticsearch Service
  elasticsearch:
    build:
      context: ./elk/elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    env_file:
      - ./elk/elasticsearch/.env
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
      - elasticsearch-service-token:/usr/share/elasticsearch/service_token
    networks:
      - elk-net

  # Logstash Service
  logstash:
    container_name: logstash
    build:
      context: ./elk/logstash
    ports:
      # - "5234:5234"  # For Beats input
      - "5240:5240"  # For GELF input
      - "5431:5431"
      - "5959:5959"
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    networks:
      - elk-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # Kibana Service
  kibana:
    build:
      context: ./elk/kibana
    ports:
      - "5601:5601"
    env_file:
      - ./elk/kibana/.env
    depends_on:
      - elasticsearch
    networks:
      - elk-net
    volumes:
      - elasticsearch-service-token:/usr/share/kibana/service_token

  # Angular Frontend Service
  angular:
    build:
      context: ./fe
    ports:
      - "4200:4200"
    volumes:
      - ./fe:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: ng serve --host 0.0.0.0 --poll 1000
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - app-net
      - elk-net
    # logging:
    #   driver: "gelf"
    #   options:
    #     gelf-address: "udp://logstash:5240"

  # Django Backend Service
  django:
    build:
      context: ./be
    command: >
      sh -c "python manage.py makemigrations games &&
             python manage.py makemigrations accounts &&
             python manage.py migrate &&
             python manage.py loaddata achievements.json &&
             daphne -b 0.0.0.0 -p 8000 be.asgi:application"
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=be.settings
      - DOMAIN=localhost
    depends_on:
      # - db
      # redis
      # elasticsearch
      logstash:
        condition: service_healthy
    networks:
      - app-net
      - elk-net
    volumes:
      - ./be:/app
      - ./static:/app/static
    # logging:
    #   driver: "gelf"
    #   options:
    #     gelf-address: "udp://logstash:5240"

  # PostgreSQL Database Service
  db:
    image: postgres:17
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-net

  # Redis Service
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - app-net

networks:
  elk-net:
    driver: bridge
  app-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  esdata:
    driver: local
  elasticsearch-service-token:
    driver: local
