version: '3.8'

services:

  nginx:
    build:
      context: ./fe
    ports:
      - "80:80"
    depends_on:
      - django
    networks:
      - webnet


  # angular:
  #   build:
  #     context: ./fe
  #   ports:
  #     - "4200:4200"
  #   volumes:
  #     - ./fe:/app  # Mount the local Angular app to the container
  #     - /app/node_modules  # Ensure node_modules is not overwritten
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true  # Use polling for file changes
  #   command: ng serve --host 0.0.0.0 --poll 1000  # Serve with polling enabled
  #   depends_on:
  #     - django
  #   networks:
  #     - webnet

  django:
    build:
      context: ./be
    command: >
      sh -c "python manage.py makemigrations games &&
             python manage.py makemigrations accounts &&
             python manage.py migrate &&
             python manage.py loaddata achievements.json &&
             daphne -b 0.0.0.0 -p 8000 be.asgi:application"
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=be.settings
      - DOMAIN=transendence.42.hn
    depends_on:
      - db
      - redis
    networks:
      - webnet
    volumes:
      - ./be:/app  # Bind mount for the Django app code
      - ./static:/app/static  # Static files directory

  db:
    image: postgres:17
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Named volume for database persistence
    ports:
      - "5432:5432"
    networks:
      - webnet

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - webnet

networks:
  webnet:

volumes:
  postgres_data:  # Persistent volume for PostgreSQL data
