load_module modules/ngx_http_modsecurity_module.so;

events {
    # Events configuration (can be left empty)
}

http {

    # Log settings
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$http_authorization $request_body';
    access_log /dev/stdout custom;
    error_log /dev/stderr;


    # MIME types
    include /etc/nginx/mime.types;
    # default_type application/octet-stream;
    default_type application/javascript;

    gzip off;
    gzip_types text/javascript application/javascript;
    gzip_proxied any;
    gzip_disable "msie6";


    # Enable ModSecurity
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

    # Buffering and Proxy settings
    proxy_buffer_size 2m;            # Single buffer can hold up to 2 MB
    proxy_buffers 16 1m;            # 16 buffers, each 1 MB (16 MB total)
    proxy_busy_buffers_size 2m;     # Busy buffers can handle at least 2 MB
    proxy_max_temp_file_size 10m;   # Max size for temp files
    proxy_temp_file_write_size 8m;  # Write temp files in chunks of 8 MB

    server {
        listen 80;
        server_name transendence.42.hn;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name transendence.42.hn;

        # SSL certificate files
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # SSL configuration
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        # ssl_prefer_server_ciphers on;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:HIGH:!aNULL:!MD5";
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://django:8000/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ftapi/ {
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:HIGH:!aNULL:!MD5";
            proxy_pass https://api.intra.42.fr/; # The external 42 API
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
            proxy_ssl_verify on;
            proxy_pass_request_body on;
            proxy_set_header Host api.intra.42.fr;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-Id $request_id;  # Forward any custom headers you need
            proxy_ssl_server_name on;
            proxy_set_header Debug-Mode "true";

            # Optional: handle preflight requests (OPTIONS)
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                return 204;
            }
        }

        location /ws/ {
            proxy_pass http://django:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ {
            alias /static/;
        }

    }
}